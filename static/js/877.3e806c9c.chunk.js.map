{"version":3,"file":"static/js/877.3e806c9c.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: #181717;\n  text-align: center;\n  text-shadow: 2px 2px 5px white;\n  font-size: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 1px 5px gray;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 28px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  gap: 5px;\n`;\n\nexport const FormInput = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const FormButton = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #145d6f;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\n\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const { contactsItem } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const { name, number } = form.elements;\n\n    const newContact = {\n      id: nanoid(),\n      name: name.value,\n      number: number.value,\n    };\n    if (contactsItem.some(contact => contact.name === name.value)) {\n      Notiflix.Report.warning(\n        'Warning',\n        `${name.value} is already in contacts.`\n      );\n    } else {\n      dispatch(addContact(newContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я\\s]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\nNotiflix.Report.init({\n  svgSize: '50px',\n  messageFontSize: '20px',\n  warning: {\n    svgColor: '#44728f',\n\n    buttonBackground: '#44728f',\n    backOverlayColor: 'rgba(0,0, 0,0.2)',\n  },\n});\n","import styled from '@emotion/styled';\nimport { BiSolidTrash } from 'react-icons/bi';\n\nexport const ContactListStyled = styled.ul`\n  padding-left: 0;\n  max-width: 450px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1048px) {\n    width: 450px;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 26px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  box-shadow: 1px 1px 5px gray;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const ContactData = styled.p`\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nexport const ButtonDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  border-radius: 8px;\n  height: 35px;\n  padding: 0 5px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #2a7182;\n  }\n`;\n\nexport const DeleteSpan = styled.span`\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const ButtonIcon = styled(BiSolidTrash)`\n  fill: currentColor;\n`;\n\nexport const Text = styled.li`\n  display: block;\n  font-size: 28px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { BiSolidFace, BiSolidPhone } from 'react-icons/bi';\n\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport {\n  ContactListStyled,\n  ContactItem,\n  ContactData,\n  ButtonDelete,\n  Span,\n  ButtonIcon,\n  Text,\n  DeleteSpan,\n} from './ContactList.styled';\n\nexport function ContactList() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const { contactsItem, isLoading, error } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilterContact = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contactsItem.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getFilterContact();\n\n  return (\n    <ContactListStyled>\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      {contactsItem.length > 0 ? (\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactData>\n              <Span>\n                <BiSolidFace />\n                {name}:{' '}\n              </Span>\n              <Span>\n                <BiSolidPhone />\n                {number}\n              </Span>\n            </ContactData>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <ButtonIcon /> <DeleteSpan>Delete</DeleteSpan>\n            </ButtonDelete>\n          </ContactItem>\n        ))\n      ) : (\n        <Text>Oops, contact list is empty. Add new contact</Text>\n      )}\n    </ContactListStyled>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 26px;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  font-size: 24px;\n  border-radius: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { Container, FilterLabel, FilterInput } from './Filter.styled';\n\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Container>\n      <FilterLabel>\n        Find contact by name\n        <FilterInput type=\"text\" onChange={onChangeFilter} value={filter} />\n      </FilterLabel>\n    </Container>\n  );\n}\n\n","import { useSelector } from 'react-redux';\n\nimport { getContacts } from 'redux/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\n\nconst Contacts = () => {\n  const { isLoading, error } = useSelector(getContacts);\n  return (\n    <>\n      <Section title={'Add new contact'}>\n        <ContactForm />\n      </Section>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Section title={'My contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Title","styled","Section","title","children","getContacts","state","contacts","getFilter","filter","Form","FormLabel","FormInput","FormButton","ContactForm","contactsItem","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","target","elements","name","number","newContact","id","nanoid","value","some","contact","Notiflix","addContact","reset","type","pattern","required","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","ContactListStyled","ContactItem","ContactData","Span","ButtonDelete","DeleteSpan","ButtonIcon","BiSolidTrash","Text","ContactList","isLoading","error","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","trim","includes","getFilterContact","length","map","onClick","deleteContact","Container","FilterLabel","FilterInput","Filter","onChange","setFilter"],"sourceRoot":""}