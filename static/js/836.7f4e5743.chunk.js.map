{"version":3,"file":"static/js/836.7f4e5743.chunk.js","mappings":"0JAEaA,E,QAAQC,EAAAA,GAAH,yH,UCCX,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,gCACE,SAACJ,EAAD,UAAQG,IACPC,IAGN,C,6ECRYC,EAAkB,SAAAC,GAC7BC,IAAAA,OAAAA,QAAwB,UAAWD,EACpC,EAEDC,IAAAA,OAAAA,KAAqB,CACnBC,QAAS,OACTC,gBAAiB,OACjBC,QAAS,CACPC,SAAU,UAEVC,iBAAkB,UAClBC,iBAAkB,qB,uHCXTC,EAAOb,EAAAA,EAAAA,KAAH,yWAgBJc,EAAQd,EAAAA,EAAAA,MAAH,yIAQLe,EAAQf,EAAAA,EAAAA,MAAH,2IASLgB,EAAShB,EAAAA,EAAAA,OAAH,kY,6BC5BNiB,EAAe,WAAO,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IA8B1B,OACE,4BACE,UAACT,EAAD,CAAMU,SA9BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf,EAAkCD,EAAKE,SAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAEjBA,EAASC,MAAMC,OAAS,GAC1B7B,EAAAA,EAAAA,GAAgB,4DAMlBc,GACEgB,EAAAA,EAAAA,IAAS,CACPL,KAAMA,EAAKG,MACXF,MAAOA,EAAME,MACbD,SAAUA,EAASC,SAGvBd,GACEiB,EAAAA,EAAAA,IAAM,CACJL,MAAOA,EAAME,MACbD,SAAUA,EAASC,SAGvBN,EAAKU,QACN,EAIG,WACE,UAACtB,EAAD,mBAEE,SAACC,EAAD,CAAOsB,KAAK,OAAOR,KAAK,OAAOS,IAAI,UAErC,UAACxB,EAAD,qBAEE,SAACC,EAAD,CAAOsB,KAAK,OAAOR,KAAK,cAE1B,UAACf,EAAD,uBAEE,SAACC,EAAD,CAAOsB,KAAK,WAAWR,KAAK,iBAE9B,SAACb,EAAD,CAAQqB,KAAK,SAAb,yBAEI,OAALjB,QAAK,IAALA,GAAA,UAAAA,EAAOmB,gBAAP,mBAAiBC,YAAjB,eAAuBX,QACtBzB,EAAAA,EAAAA,GAAgB,sCAGvB,E,UCjDD,EARiB,WACf,OACE,SAACH,EAAA,EAAD,CAASC,MAAO,WAAhB,UACE,SAACe,EAAD,KAGL,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/helped/getNotificatin.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: #181717;\n  text-align: center;\n  text-shadow: 2px 2px 5px white;\n  font-size: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Notiflix from 'notiflix';\n\nexport const getNotification = message => {\n  Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n  svgSize: '50px',\n  messageFontSize: '20px',\n  warning: {\n    svgColor: '#0f596b',\n\n    buttonBackground: '#0f596b',\n    backOverlayColor: 'rgba(0,0, 0,0.2)',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  padding: 10px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  box-shadow: 1px 1px 5px gray;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #145d6f;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { logIn, register } from 'redux/auth/auth-operations';\nimport { Button, Form, Input, Label } from './RegisterForm.styled';\nimport { getError } from 'redux/auth/auth-selectors';\nimport { getNotification } from 'components/helped/getNotificatin';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, email, password } = form.elements;\n\n    if (password.value.length < 7) {\n      getNotification(\n        `The password must be composed of at least 7 characters.`\n      );\n      return;\n    }\n\n    dispatch(\n      register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      })\n    );\n    dispatch(\n      logIn({\n        email: email.value,\n        password: password.value\n      })\n    )\n    form.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" min=\"6\" />\n        </Label>\n        <Label>\n          E-mail\n          <Input type=\"text\" name=\"email\" />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n        </Label>\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n      {error?.response?.data?.name &&\n        getNotification('This email is already registered')}\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Section } from 'components/Section/Section';\n\nconst Register = () => {\n  return (\n    <Section title={'Register'}>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["Title","styled","Section","title","children","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","Form","Label","Input","Button","RegisterForm","dispatch","useDispatch","error","useSelector","getError","onSubmit","e","preventDefault","form","currentTarget","elements","name","email","password","value","length","register","logIn","reset","type","min","response","data"],"sourceRoot":""}