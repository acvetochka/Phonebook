{"version":3,"file":"static/js/309.ad785281.chunk.js","mappings":"8LAGaA,EAAeC,EAAAA,EAAAA,IAAH,+CAIZC,EAAQD,EAAAA,EAAAA,MAAH,uZAGT,gBAAGE,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OACLD,GAAaC,EAAW,QAAU,KAD7B,IAEM,gBAAGD,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OACXD,GAAaC,EAAW,gBAAkB,kBAD/B,IAED,gBAAGD,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OAAgCD,GAAaC,EAAW,OAAS,MAAjE,IAeDC,EAAQJ,EAAAA,EAAAA,MAAH,gPAeLK,EAAcL,EAAAA,EAAAA,OAAH,sK,8BCvCXM,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACvC,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOR,EAAP,KAAkBS,EAAlB,KACA,GAA+BD,EAAAA,EAAAA,UAAS,IAAxC,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,UAAS,YAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAUA,OACE,UAAChB,EAAD,YACE,SAACK,EAAD,CACEY,GAAIR,EACJC,KAAe,aAATD,EAAsBM,EAAYL,EACxCD,KAAMA,EACNS,QAAS,kBAAMN,GAAa,EAAnB,EACTO,OAAQ,kBAAMP,GAAa,EAAnB,EACRQ,SAViB,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,MAAtB,EAWlBA,MAAOV,KAET,SAACX,EAAD,CAAOsB,QAAQ,WAAWrB,UAAWA,EAAWC,SAAUS,EAA1D,SACGL,IAEO,aAATC,GAAuBI,IACtB,SAACP,EAAD,CAAaI,KAAK,SAASe,QAvBX,WACpBT,GAAa,SAAAD,GAAS,OACQA,EAAd,aAAdA,EAAwC,OAAuB,UAD3C,GAGvB,EAmBK,SACiB,SAAdA,GAAuB,SAAC,MAAD,KAAY,SAAC,MAAD,QAK7C,C,sECrCYW,E,QAAQzB,EAAAA,GAAH,yH,UCCX,SAAS0B,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,gCACE,SAACH,EAAD,UAAQE,IACPC,IAGN,C,uHCRYC,EAAO7B,EAAAA,EAAAA,KAAH,yWAiCJ8B,GAjBQ9B,EAAAA,EAAAA,MAAH,yIAQGA,EAAAA,EAAAA,MAAH,2IASIA,EAAAA,EAAAA,OAAH,mY,oBC7BN+B,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,0BACE,UAACJ,EAAD,CAAMK,SAXW,SAAAC,GACnBA,EAAIC,iBACJ,IACA,EADaD,EAAIE,cACgBC,SAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACfR,GAASS,EAAAA,EAAAA,IAAM,CAAEF,MAAOA,EAAMjB,MAAOkB,SAAUA,EAASlB,QAGzD,EAIG,WACE,SAAChB,EAAA,EAAD,CAAWE,KAAK,QAAQC,KAAK,QAAQF,MAAM,WAG3C,SAACD,EAAA,EAAD,CAAWE,KAAK,WAAWC,KAAK,WAAWF,MAAM,cAqBjD,SAACuB,EAAD,CAAQrB,KAAK,SAAb,yBAIP,E,UCnDD,EARc,WACZ,OACE,SAACiB,EAAA,EAAD,CAASC,MAAO,SAAhB,UACE,SAACI,EAAD,KAGL,C","sources":["components/AuthInput/AuthInput.styled.jsx","components/AuthInput/AuthInput.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 4px;\n  top: ${({ isFocused, hasValue }) =>\n    isFocused || hasValue ? '-15px' : '50%'};\n  transform: ${({ isFocused, hasValue }) =>\n    isFocused || hasValue ? 'translateY(0)' : 'translateY(-50%)'};\n//   color: ${({ isFocused, hasValue }) =>    isFocused || hasValue ? '#fff' : '#000'};\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: space-between;\n  font-size: 18px;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(20px);\n  line-height: 1;\n  padding: 0 4px;\n  border-radius: 5px;\n  transition: all 1s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 40px;\n  border-radius: 8px;\n  font-size: 16px;\n  padding: 10px;\n\n  &:focus + label {\n    top: -15px;\n    // transform: translateY(-50%);\n    // left: 2px;\n  }\n`;\n\nexport const IconWrapper = styled.button`\n  position: absolute;\n  transform: translateY(-50%);\n  top: 50%;\n  right: 10px;\n  background: none;\n  border: none;\n  cursor: pointer;\n`\n\n","import { useState } from 'react';\nimport { IconWrapper, Input, InputWrapper, Label } from './AuthInput.styled';\nimport { LuEye } from 'react-icons/lu';\nimport { RiEyeCloseLine } from 'react-icons/ri';\n\nexport const AuthInput = ({ label, name, type}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [inputValue, setValue] = useState(\"\");\n  const [inputType, setInputType] = useState('password');\n\n  const handleOnclick = () => {\n    setInputType(inputType =>\n      inputType === 'password' ? (inputType = 'text') : (inputType = 'password')\n    );\n  };\n\n  const handleOnChange = e => setValue(e.target.value)\n\n  return (\n    <InputWrapper>\n      <Input\n        id={name}\n        type={name === 'password' ? inputType : type}\n        name={name}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n        onChange={handleOnChange}\n        value={inputValue}\n      />\n      <Label htmlFor=\"password\" isFocused={isFocused} hasValue={inputValue}>\n        {label}\n      </Label>\n      {name === 'password' && inputValue && (\n        <IconWrapper type=\"button\" onClick={handleOnclick}>\n          {inputType === 'text' ? <LuEye /> : <RiEyeCloseLine />}\n        </IconWrapper>\n      )}\n    </InputWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: #181717;\n  text-align: center;\n  text-shadow: 2px 2px 5px white;\n  font-size: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  padding: 10px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  box-shadow: 1px 1px 5px gray;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #145d6f;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { logIn } from 'redux/auth/auth-operations';\nimport { Button, Form, } from './LoginForm.styled';\nimport { AuthInput } from 'components/AuthInput/AuthInput';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n\n  // const handleChange = ({ target: { name, value } }) => {\n  //   switch (name) {\n  //     case 'email':\n  //       return setEmail(value);\n  //     case 'password':\n  //       return setPassword(value);\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const { email, password } = form.elements;\n    dispatch(logIn({ email: email.value, password: password.value }));\n    // setEmail('');\n    // setPassword('');\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <AuthInput name=\"email\" type=\"email\" label=\"Email\"\n        //  value={email}\n         />\n        <AuthInput name=\"password\" type=\"password\" label=\"Password\" \n        // value={password}\n        />\n        {/* <Label>\n          E-mail\n          <Input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label> */}\n        {/* <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label> */}\n        <Button type=\"submit\">Sign in</Button>\n      </Form>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Section } from 'components/Section/Section';\n\nconst Login = () => {\n  return (\n    <Section title={'Log in'}>\n      <LoginForm />\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["InputWrapper","styled","Label","isFocused","hasValue","Input","IconWrapper","AuthInput","label","name","type","useState","setIsFocused","inputValue","setValue","inputType","setInputType","id","onFocus","onBlur","onChange","e","target","value","htmlFor","onClick","Title","Section","title","children","Form","Button","LoginForm","dispatch","useDispatch","onSubmit","evt","preventDefault","currentTarget","elements","email","password","logIn"],"sourceRoot":""}