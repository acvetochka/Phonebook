{"version":3,"file":"static/js/155.6edcc201.chunk.js","mappings":"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","sources":["components/AuthInput/AuthInput.styled.jsx","components/AuthInput/AuthInput.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/helped/getNotificatin.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 4px;\n  top: ${({ isFocused, hasValue }) =>\n    isFocused || hasValue ? '-15px' : '50%'};\n  transform: ${({ isFocused, hasValue }) =>\n    isFocused || hasValue ? 'translateY(0)' : 'translateY(-50%)'};\n//   color: ${({ isFocused, hasValue }) =>    isFocused || hasValue ? '#fff' : '#000'};\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: space-between;\n  font-size: 18px;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(20px);\n  line-height: 1;\n  padding: 0 4px;\n  border-radius: 5px;\n  transition: all 1s ease-in-out;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 40px;\n  border-radius: 8px;\n  font-size: 16px;\n  padding: 10px;\n\n  &:focus + label {\n    top: -15px;\n    // transform: translateY(-50%);\n    // left: 2px;\n  }\n`;\n\nexport const IconWrapper = styled.button`\n  position: absolute;\n  transform: translateY(-50%);\n  top: 50%;\n  right: 10px;\n  background: none;\n  border: none;\n  cursor: pointer;\n`\n\n","import { useState } from 'react';\nimport { IconWrapper, Input, InputWrapper, Label } from './AuthInput.styled';\nimport { LuEye } from 'react-icons/lu';\nimport { RiEyeCloseLine } from 'react-icons/ri';\n\nexport const AuthInput = ({ label, name, type}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [inputValue, setValue] = useState(\"\");\n  const [inputType, setInputType] = useState('password');\n\n  const handleOnclick = () => {\n    setInputType(inputType =>\n      inputType === 'password' ? (inputType = 'text') : (inputType = 'password')\n    );\n  };\n\n  const handleOnChange = e => setValue(e.target.value)\n\n  return (\n    <InputWrapper>\n      <Input\n        id={name}\n        type={name === 'password' ? inputType : type}\n        name={name}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n        onChange={handleOnChange}\n        value={inputValue}\n      />\n      <Label htmlFor=\"password\" isFocused={isFocused} hasValue={inputValue}>\n        {label}\n      </Label>\n      {name === 'password' && inputValue && (\n        <IconWrapper type=\"button\" onClick={handleOnclick}>\n          {inputType === 'text' ? <LuEye /> : <RiEyeCloseLine />}\n        </IconWrapper>\n      )}\n    </InputWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  color: #181717;\n  text-align: center;\n  text-shadow: 2px 2px 5px white;\n  font-size: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Notiflix from 'notiflix';\n\nexport const getNotification = message => {\n  Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n  svgSize: '50px',\n  messageFontSize: '20px',\n  warning: {\n    svgColor: '#0f596b',\n\n    buttonBackground: '#0f596b',\n    backOverlayColor: 'rgba(0,0, 0,0.2)',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  // padding: 10px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  box-shadow: 1px 1px 5px gray;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #145d6f;\n  }\n`;\n\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { logIn, register } from 'redux/auth/auth-operations';\nimport { Button, Form } from './RegisterForm.styled';\nimport { getError } from 'redux/auth/auth-selectors';\nimport { getNotification } from 'components/helped/getNotificatin';\nimport { AuthInput } from 'components/AuthInput/AuthInput';\n\nimport registerData from 'data/registerData.json';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, email, password } = form.elements;\n\n    if (password.value.length < 7) {\n      getNotification(\n        `The password must be composed of at least 7 characters.`\n      );\n      return;\n    }\n\n    dispatch(\n      register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      })\n    );\n    dispatch(\n      logIn({\n        email: email.value,\n        password: password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        {registerData.map(({ name, type, label }, idx) => (\n          <AuthInput key={idx} label={label} name={name} type={type} />\n        ))}\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n      {error?.response?.data?.name &&\n        getNotification('This email is already registered')}\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Section } from 'components/Section/Section';\n\nconst Register = () => {\n  return (\n    <Section title={'Register'}>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["InputWrapper","styled","Label","isFocused","hasValue","Input","IconWrapper","AuthInput","label","name","type","useState","setIsFocused","inputValue","setValue","inputType","setInputType","id","onFocus","onBlur","onChange","e","target","value","htmlFor","onClick","Title","Section","title","children","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","Form","Button","RegisterForm","dispatch","useDispatch","error","useSelector","getError","onSubmit","preventDefault","form","currentTarget","elements","email","password","length","register","logIn","reset","registerData","idx","response","data"],"sourceRoot":""}